SELECT
  i.relname :: text AS name,
  am.amname :: text AS type,
  ARRAY(
    SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)
    FROM generate_subscripts(idx.indkey, 1) AS k ORDER BY k
  ) AS columns,
  idx.indisunique AS is_unique,
  idx.indisprimary AS is_primary,
  (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,
  idx.indpred IS NOT NULL AS is_partial
FROM pg_index AS idx
JOIN pg_class AS i ON i.oid = idx.indexrelid
JOIN pg_am AS am ON i.relam = am.oid
JOIN pg_namespace AS ns ON i.relnamespace = ns.OID
WHERE idx.indrelid = 'test_types_struct' :: REGCLASS

CREATE TEMPORARY TABLE IF NOT EXISTS "test_types_struct" ( "id" integer not null default 0, "string" text not null default '', "string_slice" text[] null, "string_slice_null" text[] null, "const1" text not null default '', "const2" text not null default '', "int" integer not null default 0, "bool_true" boolean not null default false, "bool_false" boolean not null default false, "int_slice" jsonb null, "int_slice_null" jsonb null, "embedded_slice" jsonb null, "embedded_slice_null" jsonb null, "embedded" jsonb null, "embedded_zero" jsonb null, "embedded_null" jsonb null, "embedded_pointer" jsonb null, "embedded_null_pointer" jsonb null, "time" timestamp (6) without time zone null, "time_zero" timestamp (6) without time zone null, "time_null" timestamp (6) without time zone null, "time_pointer" timestamp (6) without time zone null, "time_null_pointer" timestamp (6) without time zone null, "duration" bigint not null default 0, "duration_zero" bigint not null default 0, "duration_null" bigint null, "duration_pointer" bigint null, "duration_null_pointer" bigint null, "map" jsonb null, "map_null" jsonb null, "sql_type" text null, "sql_type_pointer" date null, "sql_type_null_pointer" date null , CONSTRAINT "test_types_struct_pk" PRIMARY KEY ("id") )

SELECT
  i.relname :: text AS name,
  am.amname :: text AS type,
  ARRAY(
    SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)
    FROM generate_subscripts(idx.indkey, 1) AS k ORDER BY k
  ) AS columns,
  idx.indisunique AS is_unique,
  idx.indisprimary AS is_primary,
  (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,
  idx.indpred IS NOT NULL AS is_partial
FROM pg_index AS idx
JOIN pg_class AS i ON i.oid = idx.indexrelid
JOIN pg_am AS am ON i.relam = am.oid
JOIN pg_namespace AS ns ON i.relnamespace = ns.OID
WHERE idx.indrelid = 'test_types_struct' :: REGCLASS

SELECT column_name, is_nullable, data_type FROM information_schema.columns WHERE table_name = 'test_types_struct'

INSERT INTO "test_types_struct" ("id", "string", "string_slice", "string_slice_null", "const1", "const2", "int", "bool_true", "bool_false", "int_slice", "int_slice_null", "embedded_slice", "embedded_slice_null", "embedded", "embedded_zero", "embedded_null", "embedded_pointer", "embedded_null_pointer", "time", "time_zero", "time_null", "time_pointer", "time_null_pointer", "duration", "duration_zero", "duration_null", "duration_pointer", "duration_null_pointer", "map", "map_null", "sql_type", "sql_type_pointer", "sql_type_null_pointer") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33) ON CONFLICT ("id") DO UPDATE SET ("string", "string_slice", "string_slice_null", "const1", "const2", "int", "bool_true", "bool_false", "int_slice", "int_slice_null", "embedded_slice", "embedded_slice_null", "embedded", "embedded_zero", "embedded_null", "embedded_pointer", "embedded_null_pointer", "time", "time_zero", "time_null", "time_pointer", "time_null_pointer", "duration", "duration_zero", "duration_null", "duration_pointer", "duration_null_pointer", "map", "map_null", "sql_type", "sql_type_pointer", "sql_type_null_pointer") = ROW("excluded"."string", "excluded"."string_slice", "excluded"."string_slice_null", "excluded"."const1", "excluded"."const2", "excluded"."int", "excluded"."bool_true", "excluded"."bool_false", "excluded"."int_slice", "excluded"."int_slice_null", "excluded"."embedded_slice", "excluded"."embedded_slice_null", "excluded"."embedded", "excluded"."embedded_zero", "excluded"."embedded_null", "excluded"."embedded_pointer", "excluded"."embedded_null_pointer", "excluded"."time", "excluded"."time_zero", "excluded"."time_null", "excluded"."time_pointer", "excluded"."time_null_pointer", "excluded"."duration", "excluded"."duration_zero", "excluded"."duration_null", "excluded"."duration_pointer", "excluded"."duration_null_pointer", "excluded"."map", "excluded"."map_null", "excluded"."sql_type", "excluded"."sql_type_pointer", "excluded"."sql_type_null_pointer") RETURNING "id", "string", "string_slice", "string_slice_null", "const1", "const2", "int", "bool_true", "bool_false", "int_slice", "int_slice_null", "embedded_slice", "embedded_slice_null", "embedded", "embedded_zero", "embedded_null", "embedded_pointer", "embedded_null_pointer", "time", "time_zero", "time_null", "time_pointer", "time_null_pointer", "duration", "duration_zero", "duration_null", "duration_pointer", "duration_null_pointer", "map", "map_null", "sql_type", "sql_type_pointer", "sql_type_null_pointer" ... with args:
([]interface {}) (len=33) {
  (*postgres.field)(Id = 1 (int)),
  (*postgres.field)(String = string (string)),
  (*postgres.field)(StringSlice = [foo bar] ([]string)),
  (*postgres.field)(StringSliceNull = [] ([]string)),
  (*postgres.field)(Const1 = test_const (postgres.TestConstType)),
  (*postgres.field)(Const2 = test_const_2 (string)),
  (*postgres.field)(Int = 1 (int)),
  (*postgres.field)(BoolTrue = true (bool)),
  (*postgres.field)(BoolFalse = false (bool)),
  (*postgres.field)(IntSlice = [1 2] ([]int)),
  (*postgres.field)(IntSliceNull = [] ([]int)),
  (*postgres.field)(EmbeddedSlice = [{Name}] ([]postgres.Embedded)),
  (*postgres.field)(EmbeddedSliceNull = [] ([]postgres.Embedded)),
  (*postgres.field)(Embedded = {Name} (postgres.Embedded)),
  (*postgres.field)(EmbeddedZero = {} (postgres.Embedded)),
  (*postgres.field)(EmbeddedNull = <nil> (*postgres.Embedded)),
  (*postgres.field)(EmbeddedPointer = &{Name} (*postgres.Embedded)),
  (*postgres.field)(EmbeddedNullPointer = <nil> (*postgres.Embedded)),
  (*postgres.field)(Time = 2019-07-19 16:08:30.123456789 +0100 UTC+1 (time.Time)),
  (*postgres.field)(TimeZero = 0001-01-01 00:00:00 +0000 UTC (time.Time)),
  (*postgres.field)(TimeNull = <nil> (*time.Time)),
  (*postgres.field)(TimePointer = 2019-07-19 16:08:30.123456789 +0000 UTC (*time.Time)),
  (*postgres.field)(TimeNullPointer = <nil> (*time.Time)),
  (*postgres.field)(Duration = 5s (time.Duration)),
  (*postgres.field)(DurationZero = 0s (time.Duration)),
  (*postgres.field)(DurationNull = <nil> (*time.Duration)),
  (*postgres.field)(DurationPointer = 7s (*time.Duration)),
  (*postgres.field)(DurationNullPointer = <nil> (*time.Duration)),
  (*postgres.field)(Map = map[Foo:Bar] (map[string]string)),
  (*postgres.field)(MapNull = map[] (map[string]string)),
  (*postgres.field)(SqlType = {2019-08-04} (postgres.SqlType)),
  (*postgres.field)(SqlTypePointer = &{2019-08-04} (*postgres.SqlType)),
  (*postgres.field)(SqlTypeNullPointer = <nil> (*postgres.SqlType))
}


SELECT "id", "string", "string_slice", "string_slice_null", "const1", "const2", "int", "bool_true", "bool_false", "int_slice", "int_slice_null", "embedded_slice", "embedded_slice_null", "embedded", "embedded_zero", "embedded_null", "embedded_pointer", "embedded_null_pointer", "time", "time_zero", "time_null", "time_pointer", "time_null_pointer", "duration", "duration_zero", "duration_null", "duration_pointer", "duration_null_pointer", "map", "map_null", "sql_type", "sql_type_pointer", "sql_type_null_pointer" FROM "test_types_struct" WHERE "id" = $1 LIMIT 1 ... with args:
([]interface {}) (len=1) {
  (*postgres.field)(Id = 1 (int))
}


